@Service
public class UserProfileService {

    @Autowired
    private UserProfileMapper userProfileMapper;

    @Autowired
    private BookCategoryMapper bookCategoryMapper;

    public UserProfileDto getProfile(String username) {
        Optional<UserProfile> optUserProfile = userProfileMapper.findById(username);
        return optUserProfile.map(UserProfile::buildProfileDto).orElseGet(() -> {
            UserProfileDto dto = new UserProfileDto();
            dto.setUsername(username);
            return dto;
        });
    }

    public void saveProfile(UserProfileDto userProfileDto) {
        Optional<UserProfile> optUserProfile = userProfileMapper.findById(userProfileDto.getUsername());
        UserProfile userProfile = optUserProfile.orElseGet(UserProfile::new);
        userProfileDto.buildUserProfile(userProfile, bookAuthorMapper, bookCategoryMapper);
        userProfileMapper.save(userProfile);
    }

    public List<BookCategory> getAllCategories() {
        return bookCategoryMapper.findAll();
    }
}
